# Creates a Service that exposes the MySQL database
apiVersion: v1
kind: Service
metadata:
  name: crd-op-app-mysql
  namespace: crd-op-writer
  labels:
    app: crd-op-app
spec:
  type: NodePort
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
  selector:
    app: crd-op-app
    tier: mysql
---
# Creates a PersistentVolume (PV) for MySQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  namespace: crd-op-writer
  labels:
    app: crd-op-app
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: "/mnt/data/mysql"  # Ensure this directory exists on your node
---
# Requests 2Gi of persistent storage for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: crd-op-writer
  labels:
    app: crd-op-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: manual
---
# Stores an SQL script (initdb.sql) to initialize the database
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: crd-op-writer
  labels:
    app: crd-op-app
data:
  initdb.sql: |
    USE appdb;
    DROP TABLE IF EXISTS clients;
    CREATE TABLE clients (
        id varchar(255) NOT NULL,
        name varchar(255) NOT NULL,
        age int(20) NOT NULL,
        country varchar(255) NOT NULL,
        PRIMARY KEY (id)
    );
---
# Defines a Deployment that runs a MySQL Pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crd-op-app-mysql
  namespace: crd-op-writer
  labels:
    app: crd-op-app
spec:
  selector:
    matchLabels:
      app: crd-op-app
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: crd-op-app
        tier: mysql
    spec:
      containers:
      - image: mysql:8.0.32
        name: mysql
        imagePullPolicy: IfNotPresent 
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        - name: MYSQL_DATABASE
          value: appdb
        - name: MYSQL_USER
          value: appuser
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d  # Auto-executed at startup
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
